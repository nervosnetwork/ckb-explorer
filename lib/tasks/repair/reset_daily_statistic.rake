require "benchmark"
namespace :repair do
  desc "Usage: RAILS_ENV=production bundle exec rake repair:reset_daily_statistic[1000]"
  task :reset_daily_statistic, %i[start_ds_id] => :environment do |_, args|
    ActiveRecord::Base.connection.execute("SET statement_timeout = 0")

    def updated_attrs
      # next attrs were generated by before attrs, so they should have an order to reset
      established_order = %i{
        daily_dao_depositors_count total_depositors_count unclaimed_compensation claimed_compensation deposit_compensation daily_dao_deposit total_dao_deposit circulating_supply circulation_ratio
      }
      others = %i{
        dao_depositors_count block_timestamp transactions_count addresses_count
        average_deposit_time mining_reward knowledge_size
        treasury_amount estimated_apc live_cells_count dead_cells_count avg_hash_rate
        avg_difficulty uncle_rate address_balance_distribution
        total_tx_fee occupied_capacity total_supply block_time_distribution
        epoch_time_distribution epoch_length_distribution locked_capacity ckb_hodl_wave holder_count activity_address_contract_distribution
      }

      established_order + others
    end

    DailyStatistic.where("id >= ?", args[:start_ds_id].to_i).order("id ASC").each do |ds|
      time = Benchmark.realtime do
        ds.reset!(updated_attrs)
      end
      puts "Reset DailyStatistic ##{ds.id} took #{(time * 1000).round(2)} ms"
    end
  end
end
